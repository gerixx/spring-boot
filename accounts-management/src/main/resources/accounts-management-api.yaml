openapi: 3.0.1
info:
  title: smec coding challenge
  description: 'Account Management Service'
  termsOfService: http://swagger.io/terms/
  contact:
    email: gerald.ehmayer@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Smarter Ecommerce.
  url: https://smarter-ecommerce.com/de/
servers:
  - url: http://localhost:8080/v1
tags:
  - name: account
    description: Account details
  - name: event
    description: Account event
  - name: statistics
    description: Account event statistics
paths:
  /account:
    put:
      tags:
        - account
      summary: Update an existing account
      operationId: updateAccount
      requestBody:
        description: Account object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        400:
          description: Account name already exists
          content: {}
        404:
          description: Account not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
        - account
      summary: Add a new account to the repository
      operationId: addAccount
      requestBody:
        description: Account object that needs to be added to the repository
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        200:
          description: Account successfully created, response contains its ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        404:
          description: Account name already exists
          content: {}
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  /account/findByName:
    get:
      tags:
        - account
      summary: Retrieve account by name
      description: Returns single account, full account name is required
      operationId: findAccountByName
      parameters:
        - name: name
          in: query
          description: Account name
          required: true
          style: form
          explode: true
          schema:
            type: string
            minLength: 3
            maxLength: 30
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          description: Account with name not found
          content: {}
  /account/{accountId}:
    get:
      tags:
        - account
      summary: Retrieve account by ID
      description: Returns a single account
      operationId: getAccountById
      parameters:
        - name: accountId
          in: path
          description: ID of account to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Account not found
          content: {}
    delete:
      tags:
        - account
      summary: Deletes an account and its events
      operationId: deleteAccount
      parameters:
        - name: accountId
          in: path
          description: Account ID to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /event/{accountId}:
    post:
      tags:
        - event
      summary: Creates events for an account by ID
      operationId: createEventsForAccountId
      parameters:
        - name: accountId
          in: path
          description: ID of account
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: List of account events
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Event'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Account not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
  /event/addToAccountByName:
    post:
      tags:
        - event
      summary: Creates events for an account by name. As the name can change it is recommended to post events for an account by its ID.
      operationId: createEventsForAccountName
      parameters:
        - name: accountName
          in: query
          description: Account name
          required: true
          style: form
          explode: true
          schema:
            type: string
            minLength: 3
            maxLength: 30
      requestBody:
        description: List of account events
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Event'
        required: true
      responses:
        404:
          description: Account not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
  /statistics/retrieveByAccountName:
    get:
      tags:
        - statistics
      summary: Retrieve event statistics for an account
      description: Retrieve statistics for an account
      operationId: getStatistics
      parameters:
        - name: accountName
          in: query
          description: Account name
          required: true
          style: form
          explode: true
          schema:
            type: string
            minLength: 3
            maxLength: 30
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                example: day, type, count
                  2019-09-23, Synchronization Started, 123
                  2019-09-23, Data Imported, 18
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Order not found
          content: {}
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        creationDate:
          type: string
          format: date-time
    Event:
      type: object
      properties:
        type:
          type: string
        timestamp:
          description: Timestamp in milliseconds as defined by java.lang.System.currentTimeMillis()
          type: integer
          format: int64
